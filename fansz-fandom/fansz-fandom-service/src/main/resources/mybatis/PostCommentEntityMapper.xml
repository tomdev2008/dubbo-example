<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.fansz.fandom.repository.PostCommentEntityMapper">

    <resultMap id="BaseResultMap" type="com.fansz.fandom.entity.PostCommentEntity">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="post_id" property="postId" jdbcType="BIGINT"/>
        <result column="comment_parent_id" property="commentParentId" jdbcType="BIGINT"/>
        <result column="commentator_sn" property="commentatorSn" jdbcType="VARCHAR"/>
        <result column="comment_content" property="commentContent" jdbcType="VARCHAR"/>
        <result column="comment_time" property="commentTime" jdbcType="TIMESTAMP"/>
        <result column="comment_source" property="commentSource" jdbcType="VARCHAR"/>
    </resultMap>

    <sql id="Base_Column_List">
    id, post_id, commentator_sn, comment_content, comment_time
  </sql>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from feeds_member_post_comment
    where id = #{id,jdbcType=BIGINT}
  </delete>

    <insert id="insert" parameterType="com.fansz.fandom.entity.PostCommentEntity">
        insert into feeds_member_post_comment (post_id,comment_parent_id,commentator_sn, comment_content, comment_time,comment_source)
        values (#{postId,jdbcType=BIGINT}, #{commentParentId,jdbcType=BIGINT},#{commentatorSn,jdbcType=VARCHAR},
        #{commentContent,jdbcType=VARCHAR}, #{commentTime,jdbcType=TIMESTAMP},#{commentSource,jdbcType=VARCHAR})
        <selectKey keyProperty="id" resultType="java.lang.Long" order="AFTER">
            select LAST_INSERT_ID()
        </selectKey>
    </insert>

    <select id="getCommentsByPostidFromFandom" resultType="com.fansz.fandom.model.comment.PostCommentQueryResult" parameterType="java.lang.Object">
         SELECT
            t.id,
            t.post_id postId,
            t.comment_content commentContent,
            t.commentator_sn commentatorSn,
            t.comment_time commentTime,
            m.member_avatar commentatorAvatar,
            m.nickname commentatorNickname,
            p.commentator_sn originSn,
            p.comment_content originContent,
            q.nickname originNickname,
            q.member_avatar originAvatar
        FROM
            feeds_member_post_comment t
        LEFT JOIN connects_member_profile m ON m.sn = t.commentator_sn
        LEFT JOIN feeds_member_post_comment p ON t.comment_parent_id = p.id
        LEFT JOIN connects_member_profile q ON p.commentator_sn = q.sn
        WHERE
            t.post_id = #{postId,jdbcType=BIGINT} AND t.comment_source=#{commentSource,jdbcType=VARCHAR}
            ORDER BY t.id ASC
    </select>

    <select id="getCommentsByPostIds" resultType="com.fansz.fandom.model.comment.PostCommentQueryResult">
        SELECT
        t.id,
        t.post_id,
        t.comment_content commentContent,
        t.commentator_sn commentatorSn,
        t.comment_time commentTime,
        m.member_avatar commentatorAvatar,
        m.nickname commentatorNickname
        FROM
        feeds_member_post_comment t
        LEFT JOIN connects_member_profile m ON m.sn = t.commentator_sn
        WHERE t.id  IN
        (SELECT max(id) FROM fansz.feeds_member_post_comment  WHERE post_id in
        <foreach collection="idList" index="index" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
        GROUP BY post_id)
    </select>
    <select id="selectByIdAndSn" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List"/> FROM feeds_member_post_comment WHERE id = #{id,jdbcType=BIGINT} AND commentator_sn = #{sn,jdbcType=VARCHAR}
    </select>
</mapper>