<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.fansz.fandom.repository.FandomMapper">

    <resultMap id="BaseResultMap" type="com.fansz.fandom.entity.FandomEntity">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="fandom_name" property="fandomName" jdbcType="VARCHAR"/>
        <result column="fandom_parent_id" property="fandomParentId" jdbcType="BIGINT"/>
        <result column="fandom_admin_sn" property="fandomAdminSn" jdbcType="VARCHAR"/>
        <result column="fandom_creator_sn" property="fandomCreatorSn" jdbcType="VARCHAR"/>
        <result column="fandom_avatar_url" property="fandomAvatarUrl" jdbcType="VARCHAR"/>
        <result column="fandom_intro" property="fandomIntro" jdbcType="VARCHAR"/>
        <result column="fandom_create_time" property="fandomCreateTime" jdbcType="DATE"/>
    </resultMap>

    <resultMap id="fandomAllInfoResultMap" type="com.fansz.fandom.model.fandom.FandomInfoResult">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="fandom_name" property="fandomName" jdbcType="VARCHAR"/>
        <result column="fandom_parent_id" property="fandomParentId" jdbcType="BIGINT"/>
        <result column="fandom_parent_name" property="fandomParentName" jdbcType="VARCHAR"/>
        <result column="fandom_admin_sn" property="fandomAdminSn" jdbcType="VARCHAR"/>
        <result column="fandom_creator_sn" property="fandomCreatorSn" jdbcType="VARCHAR"/>
        <result column="fandom_avatar_url" property="fandomAvatarUrl" jdbcType="VARCHAR"/>
        <result column="fandom_intro" property="fandomIntro" jdbcType="VARCHAR"/>
        <result column="fandom_create_time" property="fandomCreateTime" jdbcType="DATE"/>
        <result column="followed" property="followed" jdbcType="VARCHAR"/>
        <result column="follower_count" property="followerCount" jdbcType="INTEGER"/>
        <result column="post_count" property="postCount" jdbcType="INTEGER"/>
        <association property="creator" javaType="com.fansz.fandom.model.profile.UserInfoResult"
                     resultMap="com.fansz.fandom.repository.UserMapper.userInfoResultMap" columnPrefix="u_"/>
    </resultMap>

    <sql id="Fandom_Column_List">
        ${alias}.id, ${alias}.fandom_name, ${alias}.fandom_parent_id, ${alias}.fandom_admin_sn, ${alias}.fandom_creator_sn, ${alias}.fandom_avatar_url,
        ${alias}.fandom_intro, ${alias}.fandom_create_time
    </sql>

    <insert id="insert" parameterType="com.fansz.fandom.entity.FandomEntity">
        insert into feeds_fandom (fandom_name,fandom_parent_id,fandom_admin_sn,
        fandom_creator_sn,fandom_avatar_url,fandom_intro,fandom_create_time)
        values (#{fandomName,jdbcType=VARCHAR}, #{fandomParentId,jdbcType=BIGINT},
        #{fandomAdminSn,jdbcType=VARCHAR}, #{fandomCreatorSn,jdbcType=VARCHAR}, #{fandomAvatarUrl,jdbcType=VARCHAR},
        #{fandomIntro,jdbcType=VARCHAR}, #{fandomCreateTime})
        <selectKey keyProperty="id" resultType="java.lang.Long" order="AFTER">
            select LAST_INSERT_ID()
        </selectKey>
    </insert>

    <update id="modifyFandom" parameterType="com.fansz.fandom.model.fandom.ModifyFandomParam">
        update feeds_fandom
        <set>
            <if test="fandomName != null">
                fandom_name = #{fandomName,jdbcType=VARCHAR},
            </if>
            <if test="fandomParentId != null">
                fandom_parent_id = #{fandomParentId,jdbcType=BIGINT},
            </if>
            <if test="fandomAvatarUrl != null">
                fandom_avatar_url = #{fandomAvatarUrl,jdbcType=VARCHAR},
            </if>
            <if test="fandomIntro != null">
                fandom_intro = #{fandomIntro,jdbcType=VARCHAR},
            </if>
            <if test="recommend != null">
                recommend = #{recommend,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT} AND fandom_admin_sn = #{adminSn,jdbcType=VARCHAR}
    </update>

    <select id="listAllFandom" parameterType="com.fansz.fandom.entity.FandomEntity"
            resultMap="fandomAllInfoResultMap">
        SELECT
        <include refid="Fandom_Column_List">
            <property name="alias" value="a"/>
        </include>
        ,
        <include refid="com.fansz.fandom.repository.UserMapper.User_Column_List">
            <property name="alias" value="b"/>
        </include>
        FROM feeds_fandom a LEFT JOIN
        connects_member_profile b ON a.fandom_creator_sn = b.sn
    </select>

    <select id="listUnfocusFandom" parameterType="com.fansz.fandom.entity.FandomEntity"
            resultMap="fandomAllInfoResultMap">
        SELECT
        <include refid="Fandom_Column_List">
            <property name="alias" value="a"/>
        </include>
        ,
        <include refid="com.fansz.fandom.repository.UserMapper.User_Column_List">
            <property name="alias" value="b"/>
        </include>
        FROM feeds_fandom a LEFT JOIN
        connects_member_profile b ON a.fandom_creator_sn = b.sn
        WHERE NOT EXISTS
        (select 1 FROM feeds_member_fandom c WHERE c.fandom_id=a.id AND c.member_sn=#{memberSn,jdbcType=VARCHAR})

    </select>

    <select id="getRecommendFandom" parameterType="java.lang.String" resultMap="fandomAllInfoResultMap">
        SELECT  f.*,m.count follower_count,p.member_avatar,p.sn u_sn,p.nickname u_nickname,
        (select count(1) from feeds_member_fandom t where t.fandom_id=f.id and t.member_sn=#{memberSn,jdbcType=VARCHAR}) followed,
        (select count(1) from feeds_member_post_fandom g where g.fandom_id=f.id) post_count
        from feeds_fandom  f,
        (select  count(1)  count, fandom_id from feeds_member_fandom  group by fandom_id)  m,
        connects_member_profile p
        where f.id = m.fandom_id
        and f.recommend = '1'
        and   f.fandom_creator_sn = p.sn
        order by m.count desc
    </select>

    <select id="getFandomDetail" resultMap="fandomAllInfoResultMap">
        SELECT  f.*,p.member_avatar,p.sn u_sn,p.nickname u_nickname,p.member_avatar u_member_avatar,
        (SELECT COUNT(1)+IFNULL(t.infatuation,0) FROM feeds_member_fandom t WHERE t.fandom_id=f.id AND t.member_sn=#{memberSn,jdbcType=VARCHAR}) followed,
        (SELECT COUNT(1) from feeds_member_post_fandom g WHERE g.fandom_id=f.id) post_count,
        (SELECT COUNT(1) from feeds_member_fandom t WHERE t.fandom_id=f.id) follower_count,
        (SELECT fandom_name from feeds_fandom where id = f.fandom_parent_id) fandom_parent_name
        FROM feeds_fandom  f, connects_member_profile p
        WHERE f.id =  #{fandomId,jdbcType=BIGINT} AND f.fandom_creator_sn=p.sn
    </select>

    <select id="searchFandoms" parameterType="java.lang.String" resultMap="fandomAllInfoResultMap">
        SELECT
        ff.id,
        ff.fandom_name,
        ff.fandom_parent_id,
        ff.fandom_creator_sn,
        ff.fandom_avatar_url,
        ff.fandom_intro,
        (
        SELECT
        count(1)
        FROM
        feeds_member_fandom
        WHERE
        fandom_id = ff.id
        ) follower_count,
        (
        SELECT
        count(1)
        FROM
        feeds_member_post_fandom
        WHERE
        fandom_id = ff.id
        ) post_count,
        (
        SELECT
        infatuation
        FROM
        feeds_member_fandom
        WHERE
        member_sn = #{memberSn,jdbcType=VARCHAR}
        AND fandom_id=ff.id
        ) followed,
        <include refid="com.fansz.fandom.repository.UserMapper.User_Column_List">
            <property name="alias" value="mp"/>
        </include>
        FROM
        feeds_fandom ff
        LEFT JOIN connects_member_profile mp ON ff.fandom_creator_sn = mp.sn
        WHERE fandom_name like concat('%',#{searchVal},'%')
        OR fandom_intro like concat('%',#{searchVal},'%')
    </select>

    <select id="getCountByFandomName" parameterType="java.lang.String" resultType="java.lang.Integer">
        SELECT
            count(1)
        FROM
            feeds_fandom
        WHERE
            fandom_name = #{fandomName,jdbcType=VARCHAR}
    </select>

    <delete id="delFandom" parameterType="com.fansz.fandom.model.fandom.DelFandomParam">
      DELETE
        FROM
            feeds_fandom
        WHERE
            id = #{id,jdbcType=BIGINT}
        AND fandom_admin_sn = #{adminSn,jdbcType=VARCHAR}
    </delete>

    <select id="getFandomInfo" parameterType="java.lang.String" resultMap="fandomAllInfoResultMap">
        SELECT
        <include refid="Fandom_Column_List">
            <property name="alias" value="f"/>
        </include>
        FROM
        feeds_fandom f
        where
        <if test="fandomName != null">
            f.fandom_name = #{fandomName,jdbcType=VARCHAR}
        </if>
        <if test="fandomId != null">
            f.id = #{fandomId,jdbcType=BIGINT}
        </if>
    </select>

    <select id="getFandomCategory" resultType="java.util.Map">
        SELECT
        <include refid="Fandom_Column_List">
            <property name="alias" value="a"/>
        </include>
        FROM feeds_fandom a
        where a.fandom_parent_id = 0
        OR (a.fandom_parent_id in (select id from feeds_fandom b where b.fandom_parent_id=0))
        order by a.id
    </select>

    <select id="getFandomByIds" resultMap="fandomAllInfoResultMap">
        SELECT
        <include refid="Fandom_Column_List">
            <property name="alias" value="a"/>
        </include>
        FROM feeds_fandom a
        where a.id in
        <foreach collection="idList" index="index" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </select>
</mapper>