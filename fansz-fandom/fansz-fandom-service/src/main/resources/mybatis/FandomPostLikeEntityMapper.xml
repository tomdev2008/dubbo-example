<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.fansz.fandom.repository.FandomPostLikeEntityMapper">

    <resultMap id="userInfoResult" type="com.fansz.fandom.model.profile.UserInfoResult">
        <result column="sn" jdbcType="VARCHAR" property="sn"/>
        <result column="member_avatar" jdbcType="VARCHAR" property="memberAvatar"/>
        <result column="nickname" jdbcType="VARCHAR" property="nickname"/>
    </resultMap>

    <resultMap id="BaseResultMap" type="com.fansz.fandom.entity.FandomPostLikeEntity">
    <id column="id" property="id" jdbcType="BIGINT"/>
    <result column="member_id" property="memberId" jdbcType="BIGINT"/>
    <result column="post_id" property="postId" jdbcType="BIGINT"/>
    <result column="like_time" property="likeTime" jdbcType="TIMESTAMP"/>
</resultMap>

    <resultMap id="postLikeInfoResult" type="com.fansz.fandom.model.post.PostLikeInfoResult">
        <id column="id" property="likeId" jdbcType="BIGINT"/>
        <result column="post_id" property="postId" jdbcType="BIGINT"/>
        <result column="like_time" property="likeTime" jdbcType="TIMESTAMP"/>
        <association property="likeMember" resultMap="userInfoResult" />
    </resultMap>

    <sql id="Base_Column_List">
    id, member_id, post_id, like_time
    </sql>

    <insert id="insert" parameterType="com.fansz.fandom.entity.FandomPostLikeEntity">
        insert into feeds_member_post_like (member_sn, post_id, like_time)
        values (#{memberSn,jdbcType=BIGINT}, #{postId,jdbcType=BIGINT},#{likeTime,jdbcType=TIMESTAMP})
        <selectKey keyProperty="id" resultType="java.lang.Long" order="AFTER">
            select LAST_INSERT_ID()
        </selectKey>
    </insert>

    <select id="listPostVotes" resultMap="postLikeInfoResult" parameterType="java.lang.Long">
         select
            l.id,
            l.like_time,
            p.nickname,
            p.sn,
            p.member_avatar
        from feeds_member_post_like l LEFT JOIN connects_member_profile p
            on l.member_sn = p.sn
        where  l.post_id =  #{postId,jdbcType=BIGINT}
  </select>

    <delete id="deleteMyLike">
        DELETE FROM feeds_member_post_like WHERE post_id = #{postId} AND member_sn = #{sn}
    </delete>

    <select id="isLiked" resultType="java.lang.Integer">
        SELECT  COUNT(1)
        FROM feeds_member_post_like WHERE post_id = #{postId} AND member_sn = #{sn}
    </select>
</mapper>