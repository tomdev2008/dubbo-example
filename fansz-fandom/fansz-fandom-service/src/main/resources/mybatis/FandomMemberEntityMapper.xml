<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.fansz.fandom.repository.FandomMemberEntityMapper">

    <resultMap id="BaseResultMap" type="com.fansz.fandom.entity.FandomMemberEntity">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="member_sn" property="memberSn" jdbcType="VARCHAR"/>
        <result column="fandom_id" property="fandomId" jdbcType="VARCHAR"/>
        <result column="infatuation" property="infatuation" jdbcType="VARCHAR"/>
        <result column="join_time" property="joinTime" jdbcType="TIMESTAMP"/>
    </resultMap>

    <sql id="Base_Column_List">
    id, member_sn, fandom_id,infatuation, join_time
  </sql>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from feeds_member_fandom
    where id = #{id,jdbcType=BIGINT}
  </delete>

    <insert id="insertSelective" parameterType="com.fansz.fandom.entity.FandomMemberEntity">
        insert into feeds_member_fandom
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="memberSn != null">
                member_sn,
            </if>
            <if test="fandomId != null">
                fandom_id,
            </if>
            <if test="infatuation != null">
                infatuation,
            </if>
            <if test="joinTime != null">
                join_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="memberSn != null">
                #{memberSn,jdbcType=VARCHAR},
            </if>
            <if test="fandomId != null">
                #{fandomId,jdbcType=VARCHAR},
            </if>
            <if test="infatuation != null">
                #{infatuation,jdbcType=VARCHAR},
            </if>
            <if test="joinTime != null">
                #{joinTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
        <selectKey keyProperty="id" resultType="java.lang.Long" order="AFTER">
            select LAST_INSERT_ID()
        </selectKey>
    </insert>

    <select id="findFandomsByUserId" parameterType="java.lang.String" resultType="java.lang.String">
        select fandom_sn from feeds_member_fandom where member_sn = #{memberSn,jdbcType=VARCHAR}
    </select>

    <select id="selectByMemberAndFandom" parameterType="com.fansz.fandom.entity.FandomMemberEntity"
            resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from feeds_member_fandom
        where member_sn = #{memberSn,jdbcType=VARCHAR} and fandom_id=#{fandomId,jdbcType=VARCHAR}
    </select>

    <select id="findFandomsByMemberSn" parameterType="java.lang.String"
            resultMap="com.fansz.fandom.repository.FandomMapper.fandomAllInfoResultMap">
        SELECT b.id,b.fandom_name,b.fandom_parent_id,b.fandom_avatar_url,b.fandom_intro,b.fandom_create_time,
        <include refid="com.fansz.fandom.repository.UserMapper.User_Column_List">
            <property name="alias" value="c"/>
        </include>
        ,
        (SELECT count(1) FROM feeds_member_fandom WHERE fandom_id=a.fandom_id) follower_count,
        (SELECT count(1) FROM feeds_member_post_fandom WHERE fandom_id=a.fandom_id) post_count,
        (SELECT count(1)+IFNULL(infatuation,0) FROM feeds_member_fandom WHERE fandom_id=a.fandom_id and
        member_sn=#{memberSn,jdbcType=VARCHAR})followed
        FROM feeds_member_fandom a,feeds_fandom b,connects_member_profile c
        WHERE a.member_sn=#{memberSn,jdbcType=VARCHAR} and a.fandom_id=b.id and b.fandom_creator_sn=c.sn;
    </select>

    <select id="getFandomMembers"
            resultMap="com.fansz.fandom.repository.UserMapper.friendInfoResultMap">
        SELECT p.*
        FROM  feeds_member_fandom m
        INNER JOIN connects_member_profile  p
        WHERE m.fandom_id =  #{fandomId,jdbcType=BIGINT}
        AND   m.member_sn=p.sn
        AND p.member_status='1'
        ORDER BY m.join_time ASC
    </select>

</mapper>