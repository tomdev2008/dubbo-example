<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
       http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.2.xsd">
    <context:component-scan base-package="com.fansz.fandom"/>

    <util:properties id="kafkaProp" location="classpath:/conf/kafka.properties"/>

    <context:property-placeholder ignore-resource-not-found="false"
                                  location="classpath:/conf/jdbc.properties,classpath:/conf/redis.properties,classpath:/conf/dubbo.properties"/>
    <bean id="searchClient" class="com.fansz.event.search.SearchClientFactoryBean">
        <property name="props">
            <map>
                <entry key="cluster.name" value="${elasticsearch.cluster.name}"/>
            </map>
        </property>
        <property name="addresses" value="${elasticsearch.cluster.nodes}"/>
    </bean>

    <import resource="classpath:/spring/spring-mybatis.xml"/>
    <import resource="classpath:/spring/spring-redis.xml"/>
    <import resource="classpath:/spring/spring-kafka.xml"/>
    <import resource="classpath:/spring/spring-dubbox.xml"/>

</beans>