<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.fansz.members.api.repository.FandomMapper">

    <resultMap id="BaseResultMap" type="com.fansz.members.api.entity.FandomEntity">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="fandom_name" property="fandomName" jdbcType="VARCHAR"/>
        <result column="fandom_parent_id" property="fandomParentId" jdbcType="BIGINT"/>
        <result column="fandom_admin_sn" property="fandomAdminSn" jdbcType="BIGINT"/>
        <result column="fandom_creator_sn" property="fandomCreatorSn" jdbcType="BIGINT"/>
        <result column="fandom_avatar_url" property="fandomAvatarUrl" jdbcType="VARCHAR"/>
        <result column="fandom_intro" property="fandomIntro" jdbcType="VARCHAR"/>
        <result column="fandom_create_time" property="fandomCreateTime" jdbcType="DATE"/>
    </resultMap>

    <resultMap id="fandomInfoResultMap" type="com.fansz.members.model.fandom.FandomInfoResult">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="fandom_name" property="fandomName" jdbcType="VARCHAR"/>
        <result column="fandom_parent_id" property="fandomParentId" jdbcType="BIGINT"/>
        <result column="fandom_admin_id" property="fandomAdminId" jdbcType="BIGINT"/>
        <result column="fandom_avatar_url" property="fandomAvatarUrl" jdbcType="VARCHAR"/>
        <result column="fandom_intro" property="fandomIntro" jdbcType="VARCHAR"/>
        <association property="post_member" javaType="com.fansz.members.model.profile.UserInfoResult"
                     resultMap="com.fansz.members.api.repository.UserEntityMapper.userInfoResultMap"/>
    </resultMap>

    <resultMap id="fandomInfoMap" type="com.fansz.members.model.fandom.FandomInfoResult">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="fandom_name" property="fandomName" jdbcType="VARCHAR"/>
        <result column="fandom_parent_id" property="fandomParentId" jdbcType="VARCHAR"/>
        <result column="fandom_avatar_url" property="fandomAvatarUrl" jdbcType="VARCHAR"/>
        <result column="fandom_intro" property="fandomIntro" jdbcType="VARCHAR"/>
        <result column="fandom_create_time" jdbcType="TIMESTAMP" property="fandomCreateTime"/>
        <result column="follower_count" property="followerCount" jdbcType="INTEGER"/>
        <result column="post_count" property="postCount" jdbcType="INTEGER"/>
        <result column="followed" property="followed" jdbcType="INTEGER"/>
        <association property="creator" javaType="com.fansz.members.model.profile.UserInfoResult"
                     resultMap="com.fansz.members.api.repository.UserEntityMapper.userInfoResultMap"/>
    </resultMap>

    <resultMap id="fandomCategoryMap" type="com.fansz.members.model.fandom.FandomCategorys">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="fandom_name" property="fandomName" jdbcType="VARCHAR"/>
        <result column="fandom_parent_id" property="fandomParentId" jdbcType="VARCHAR"/>
        <result column="fandom_avatar_url" property="fandomAvatarUrl" jdbcType="VARCHAR"/>
        <result column="fandom_intro" property="fandomIntro" jdbcType="VARCHAR"/>
        <result column="fandom_create_time" jdbcType="TIMESTAMP" property="fandomCreateTime"/>
        <association property="childCategory" javaType="com.fansz.members.model.fandom.FandomInfoResult"
                     resultMap="fandomInfoMap"/>
    </resultMap>
    <resultMap id="findFandomInfo" type="com.fansz.members.api.entity.SingleFandomEntity">
        <result column="fandom_name" property="fandomName" jdbcType="VARCHAR"/>
        <result column="fandom_avatar_url" property="fandomAvatarUrl" jdbcType="VARCHAR"/>
        <result column="fandom_intro" property="fandomIntro" jdbcType="VARCHAR"/>
        <result column="fandom_create_time" property="fandomCreateTime" jdbcType="VARCHAR"/>
        <association property="userEntity" javaType="com.fansz.members.api.entity.UserEntity">
            <id column="m_id" property="id"/>
            <result column="m_sn" property="sn"/>
            <result column="m_nickname" property="nickname"/>
            <result column="m_member_avatar" property="memberAvatar"/>
        </association>
    </resultMap>

    <resultMap id="searchFandomResult" type="com.fansz.members.model.fandom.SearchFandomResult">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="fandom_name" property="fandomName" jdbcType="VARCHAR"/>
        <result column="fandom_parent_id" property="fandomParentId" jdbcType="VARCHAR"/>
        <result column="fandom_creator_sn" property="fandomCreatorSn" jdbcType="VARCHAR"/>
        <result column="fandom_avatar_url" property="fandomAvatarUrl" jdbcType="VARCHAR"/>
        <result column="fandom_intro" property="fandomIntro" jdbcType="VARCHAR"/>
        <result column="followerCount" property="followerCount" jdbcType="VARCHAR"/>
        <result column="postCount" property="postCount" jdbcType="VARCHAR"/>
        <result column="followed" property="followed" jdbcType="VARCHAR"/>
        <association property="creator" resultMap="com.fansz.members.api.repository.UserEntityMapper.userInfoResultMap"/>
    </resultMap>

    <select id="findFandomInfo" resultMap="findFandomInfo" parameterType="java.lang.Long">
        select
        T1.fandom_name, T1.fandom_avatar_url, T1.fandom_intro, T1.fandom_create_time,
        T2.id m_id, T2.sn m_sn, T2.nickname m_nickname, T2.member_avatar m_member_avatar
        from feeds_fandom T1
        INNER JOIN connects_member_profile T2
        ON T1.fandom_creator_sn = T2.sn
        where T1.id = #{id,jdbcType=BIGINT}
    </select>

    <sql id="Base_Column_List">
    id, fandom_name, fandom_parent_id, fandom_admin_sn, fandom_creator_sn, fandom_avatar_url,
    fandom_intro, fandom_create_time
  </sql>

    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long">
        select
        <include refid="Base_Column_List"/>
        from feeds_fandom
        where id = #{id,jdbcType=BIGINT}
    </select>

    <select id="selectByParentId" resultMap="BaseResultMap" parameterType="java.lang.Long">
        select
        <include refid="Base_Column_List"/>
        from feeds_fandom
        where fandom_parent_id = #{id,jdbcType=BIGINT}
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from feeds_fandom
    where id = #{id,jdbcType=BIGINT}
  </delete>

    <insert id="insert" parameterType="com.fansz.members.api.entity.FandomEntity">
        insert into feeds_fandom (fandom_name,fandom_parent_id,fandom_admin_sn,
        fandom_creator_sn,fandom_avatar_url,fandom_intro,fandom_create_time)
        values (#{fandomName,jdbcType=VARCHAR}, #{fandomParentId,jdbcType=BIGINT},
        #{fandomAdminSn,jdbcType=BIGINT}, #{fandomCreatorSn,jdbcType=BIGINT}, #{fandomAvatarUrl,jdbcType=VARCHAR},
        #{fandomIntro,jdbcType=VARCHAR}, #{fandomCreateTime})
        <selectKey keyProperty="id" resultType="java.lang.Long" order="AFTER">
            select LAST_INSERT_ID()
        </selectKey>
    </insert>

    <insert id="insertSelective" parameterType="com.fansz.members.api.entity.FandomEntity">
        insert into feeds_fandom
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="fandomName != null">
                fandom_name,
            </if>
            <if test="fandomParentId != null">
                fandom_parent_id,
            </if>
            <if test="fandomAdminId != null">
                fandom_admin_id,
            </if>
            <if test="fandomCreatorId != null">
                fandom_creator_id,
            </if>
            <if test="fandomAvatarUrl != null">
                fandom_avatar_url,
            </if>
            <if test="fandomIntro != null">
                fandom_intro,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="fandomName != null">
                #{fandomName,jdbcType=VARCHAR},
            </if>
            <if test="fandomParentId != null">
                #{fandomParentId,jdbcType=BIGINT},
            </if>
            <if test="fandomAdminId != null">
                #{fandomAdminId,jdbcType=BIGINT},
            </if>
            <if test="fandomCreatorId != null">
                #{fandomCreatorId,jdbcType=BIGINT},
            </if>
            <if test="fandomAvatarUrl != null">
                #{fandomAvatarUrl,jdbcType=VARCHAR},
            </if>
            <if test="fandomIntro != null">
                #{fandomIntro,jdbcType=VARCHAR},
            </if>
        </trim>
        <selectKey keyProperty="id" resultType="java.lang.Long" order="AFTER">
            select LAST_INSERT_ID()
        </selectKey>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.fansz.members.api.entity.FandomEntity">
        update feeds_fandom
        <set>
            <if test="fandomName != null">
                fandom_name = #{fandomName,jdbcType=VARCHAR},
            </if>
            <if test="fandomParentId != null">
                fandom_parent_id = #{fandomParentId,jdbcType=BIGINT},
            </if>
            <if test="fandomAdminId != null">
                fandom_admin_id = #{fandomAdminId,jdbcType=BIGINT},
            </if>
            <if test="fandomCreatorId != null">
                fandom_creator_id = #{fandomCreatorId,jdbcType=BIGINT},
            </if>
            <if test="fandomAvatarUrl != null">
                fandom_avatar_url = #{fandomAvatarUrl,jdbcType=VARCHAR},
            </if>
            <if test="fandomIntro != null">
                fandom_intro = #{fandomIntro,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>

    <update id="updateByPrimaryKey" parameterType="com.fansz.members.api.entity.FandomEntity">
    update feeds_fandom
    set fandom_name = #{fandomName,jdbcType=VARCHAR},
      fandom_parent_id = #{fandomParentId,jdbcType=BIGINT},
      fandom_admin_id = #{fandomAdminId,jdbcType=BIGINT},
      fandom_creator_id = #{fandomCreatorId,jdbcType=BIGINT},
      fandom_avatar_url = #{fandomAvatarUrl,jdbcType=VARCHAR},
      fandom_intro = #{fandomIntro,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>


    <select id="listByCondition" parameterType="com.fansz.members.api.entity.FandomEntity"
            resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM feeds_fandom
        <where>
            <if test="fandomName != null">
                fandom_name = #{fandomName,jdbcType=VARCHAR},
            </if>
            <if test="fandomParentId != null">
                fandom_parent_id = #{fandomParentId,jdbcType=BIGINT},
            </if>
            <if test="fandomAdminId != null">
                fandom_admin_id = #{fandomAdminId,jdbcType=BIGINT},
            </if>
            <if test="fandomCreatorId != null">
                fandom_creator_id = #{fandomCreatorId,jdbcType=BIGINT},
            </if>
            <if test="fandomAvatarUrl != null">
                fandom_avatar_url = #{fandomAvatarUrl,jdbcType=VARCHAR},
            </if>
            <if test="fandomIntro != null">
                fandom_intro = #{fandomIntro,jdbcType=VARCHAR},
            </if>
        </where>
    </select>

    <select id="getRecommendFandom" resultMap="fandomInfoMap">
            SELECT  f.*,m.count,p.member_avatar,p.sn,p.nickname
            from feeds_fandom  f, (select  count(1)  count, fandom_id from feeds_member_fandom  group by fandom_id)  m,connects_member_profile p
            where f.id = m.fandom_id
            and   f.fandom_creator_sn = p.sn
            order by m.count desc
    </select>

    <select id="getFandomCategory" parameterType="java.lang.Long" resultMap="fandomInfoMap">
        select
        <include refid="Base_Column_List"/>
        from feeds_fandom a
        where a.fandom_parent_id = #{id,jdbcType=BIGINT}
        order by a.id
    </select>

    <select id="getFandomMembers" parameterType="com.fansz.members.model.fandom.FandomQueryParam"
            resultMap="com.fansz.members.api.repository.UserRelationEntityMapper.contactInfoMap">

        select a.*,r.relation_status
        from (select  p.*
        from  feeds_member_fandom m, connects_member_profile  p
        where m.fandom_id =  #{fandomId,jdbcType=BIGINT}
        AND   m.member_sn=p.sn)  a    LEFT JOIN connects_member_relation r on  r.friend_member_sn=a.sn and r.my_member_sn = #{memberSn,jdbcType=VARCHAR}
    </select>

    <select id="searchFandoms" parameterType="com.fansz.members.model.fandom.SearchFandomParam" resultMap="searchFandomResult">

      SELECT
                ff.id,
                ff.fandom_name,
                ff.fandom_parent_id,
                ff.fandom_creator_sn,
                ff.fandom_avatar_url,
                ff.fandom_intro,
                (
                    SELECT
                        count(1)
                    FROM
                        feeds_member_fandom
                    WHERE
                        fandom_id = ff.id
                ) followerCount,
                (
                    SELECT
                        count(1)
                    FROM
                        feeds_member_post_fandom
                    WHERE
                        fandom_id = ff.id
                ) postCount,
                (
                    SELECT
                        count(1)
                    FROM
                        feeds_member_post_fandom
                    WHERE
                        member_sn = 1
                ) followed,
                mp.sn,
                mp.mobile,
                mp.email,
                mp.nickname,
                mp.gender,
                mp.birthday,
                mp.member_avatar,
                mp.member_type,
                mp.profile_createtime
            FROM
                feeds_fandom ff
            LEFT JOIN connects_member_profile mp ON ff.fandom_creator_sn = mp.sn

    </select>

</mapper>