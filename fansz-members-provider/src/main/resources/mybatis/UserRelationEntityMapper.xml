<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.fansz.members.api.repository.UserRelationEntityMapper">
    <resultMap id="BaseResultMap" type="com.fansz.members.api.entity.UserRelationEntity">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="my_member_sn" jdbcType="VARCHAR" property="myMemberSn"/>
        <result column="friend_member_sn" jdbcType="VARCHAR" property="friendMemberSn"/>
        <result column="relation_status" jdbcType="VARCHAR" property="relationStatus"/>
    </resultMap>
    <resultMap id="UserResultMap" type="com.fansz.members.api.entity.UserEntity">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="sn" jdbcType="VARCHAR" property="sn"/>
        <result column="mobile" jdbcType="VARCHAR" property="mobile"/>
        <result column="email" jdbcType="VARCHAR" property="email"/>
        <result column="nickname" jdbcType="VARCHAR" property="nickname"/>
        <result column="gender" jdbcType="VARCHAR" property="gender"/>
        <result column="birthday" jdbcType="VARCHAR" property="birthday"/>
        <result column="member_avatar" jdbcType="VARCHAR" property="memberAvatar"/>
        <result column="profile_createtime" jdbcType="TIMESTAMP" property="profileCreatetime"/>
        <result column="profile_updatetime" jdbcType="TIMESTAMP" property="profileUpdatetime"/>
        <result column="member_type" jdbcType="VARCHAR" property="memberType"/>
        <result column="member_status" jdbcType="VARCHAR" property="memberStatus"/>
    </resultMap>
    <resultMap id="contactInfoMap" type="com.fansz.members.model.profile.ContactInfoResult">
        <result column="sn" jdbcType="VARCHAR" property="sn"/>
        <result column="mobile" jdbcType="VARCHAR" property="mobile"/>
        <result column="email" jdbcType="VARCHAR" property="email"/>
        <result column="nickname" jdbcType="VARCHAR" property="nickname"/>
        <result column="gender" jdbcType="VARCHAR" property="gender"/>
        <result column="birthday" jdbcType="VARCHAR" property="birthday"/>
        <result column="member_avatar" jdbcType="VARCHAR" property="memberAvatar"/>
        <result column="profile_createtime" jdbcType="TIMESTAMP" property="profileCreatetime"/>
        <result column="profile_updatetime" jdbcType="TIMESTAMP" property="profileUpdatetime"/>
        <result column="member_type" jdbcType="VARCHAR" property="memberType"/>
        <result column="member_status" jdbcType="VARCHAR" property="memberStatus"/>
        <result column="relation_status" jdbcType="VARCHAR" property="relationship"/>
    </resultMap>
    <sql id="Base_Column_List">
        id, my_member_sn, friend_member_sn, relation_status
    </sql>

    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from connects_member_relation
        where id = #{id,jdbcType=INTEGER}
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete from connects_member_relation
        where id = #{id,jdbcType=INTEGER}
    </delete>

    <insert id="insert" parameterType="com.fansz.members.api.entity.UserRelationEntity">
        insert into connects_member_relation (my_member_sn, friend_member_sn,
        relation_status)
        values (#{myMemberSn,jdbcType=VARCHAR}, #{friendMemberSn,jdbcType=VARCHAR},
        #{relationStatus,jdbcType=VARCHAR})
        <selectKey keyProperty="id" resultType="java.lang.Long" order="AFTER">
            select LAST_INSERT_ID()
        </selectKey>
    </insert>

    <insert id="insertSelective" parameterType="com.fansz.members.api.entity.UserRelationEntity">
        insert into connects_member_relation
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="myMemberSn != null">
                my_member_sn,
            </if>
            <if test="friendMemberSn != null">
                friend_member_sn,
            </if>
            <if test="relationStatus != null">
                relation_status,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="myMemberSn != null">
                #{myMemberSn,jdbcType=VARCHAR},
            </if>
            <if test="friendMemberSn != null">
                #{friendMemberSn,jdbcType=VARCHAR},
            </if>
            <if test="relationStatus != null">
                #{relationStatus,jdbcType=VARCHAR},
            </if>
        </trim>
        <selectKey keyProperty="id" resultType="java.lang.Long" order="AFTER">
            select LAST_INSERT_ID()
        </selectKey>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.fansz.members.api.entity.UserRelationEntity">
        update connects_member_relation
        <set>
            <if test="myMemberSn != null">
                my_member_sn = #{myMemberSn,jdbcType=VARCHAR},
            </if>
            <if test="friendMemberSn != null">
                friend_member_sn = #{friendMemberSn,jdbcType=VARCHAR},
            </if>
            <if test="relationStatus != null">
                relation_status = #{relationStatus,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.fansz.members.api.entity.UserRelationEntity">
        update connects_member_relation
        set my_member_sn = #{myMemberSn,jdbcType=VARCHAR},
        friend_member_sn = #{friendMemberSn,jdbcType=VARCHAR},
        relation_status = #{relationStatus,jdbcType=VARCHAR}
        where id = #{id,jdbcType=INTEGER}
    </update>

    <select id="findFriends" parameterType="java.lang.String"
            resultMap="com.fansz.members.api.repository.UserEntityMapper.friendInfoResultMap">
        SELECT b.* FROM connects_member_relation a,connects_member_profile b
        WHERE a.my_member_sn=#{myMemberSn,jdbcType=VARCHAR}
        AND a.friend_member_sn=b.sn
        AND a.relation_status IN('10','11')
    </select>

    <select id="findSpecialFriends" parameterType="java.lang.String"
            resultMap="com.fansz.members.api.repository.UserEntityMapper.friendInfoResultMap">
        SELECT b.* FROM connects_member_relation a,connects_member_profile b
        WHERE a.my_member_sn=#{myMemberSn,jdbcType=VARCHAR}
        AND a.friend_member_sn=b.sn
        AND a.relation_status ='11'
    </select>

    <select id="findRelationBySns" parameterType="java.util.Map" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM connects_member_relation
        WHERE (my_member_sn=#{memberSn,jdbcType=VARCHAR} AND friend_member_sn=#{friendSn,jdbcType=VARCHAR})
        OR  (my_member_sn=#{friendSn,jdbcType=VARCHAR} AND friend_member_sn=#{memberSn,jdbcType=VARCHAR})
    </select>

    <select id="findRelation" parameterType="java.util.Map" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM connects_member_relation
        WHERE my_member_sn=#{memberSn,jdbcType=VARCHAR} AND friend_member_sn=#{friendSn,jdbcType=VARCHAR}
    </select>

    <select id="findRelationByMobiles" parameterType="java.util.Map"
            resultMap="contactInfoMap">
        SELECT b.relation_status ,a.*
        FROM connects_member_profile a
        LEFT JOIN connects_member_relation b on b.friend_member_sn=a.sn
        AND b.my_member_sn= #{memberSn,jdbcType=VARCHAR} WHERE a.mobile IN
        <foreach collection="mobileList" index="index" item="item" open="(" separator="," close=")">
            #{item,jdbcType=VARCHAR}
        </foreach>
    </select>

    <select id="listAddMeRequest" parameterType="java.lang.String"
            resultMap="com.fansz.members.api.repository.UserEntityMapper.friendInfoResultMap">
       SELECT a.* FROM connects_member_profile a LEFT JOIN connects_member_relation b on  b.my_member_sn=a.sn
       WHERE b.friend_member_sn=#{sn,jdbcType=VARCHAR} and b.relation_status='00'
    </select>

    <select id="listMySendRequest" parameterType="java.lang.String"
            resultMap="com.fansz.members.api.repository.UserEntityMapper.friendInfoResultMap">
     SELECT a.* FROM connects_member_profile a LEFT JOIN connects_member_relation b on  b.my_member_sn=a.sn
       WHERE a.friend_member_sn=#{sn,jdbcType=VARCHAR} and b.relation_status='00'
    </select>

</mapper>