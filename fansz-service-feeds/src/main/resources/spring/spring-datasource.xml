<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:util="http://www.springframework.org/schema/util" xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context-3.2.xsd
	http://www.springframework.org/schema/util
    http://www.springframework.org/schema/util/spring-util-3.2.xsd
	http://www.springframework.org/schema/aop
	http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
	http://www.springframework.org/schema/tx 
	http://www.springframework.org/schema/tx/spring-tx-3.2.xsd">
    <bean id="freemarkerConfiguration"
          class="org.springframework.ui.freemarker.FreeMarkerConfigurationFactoryBean">
        <property name="freemarkerVariables">
            <map>
                <entry key="sql_sanitize">
                    <bean class="com.fansz.orm.template.SqlSanitizeMethod"/>
                </entry>
                <entry key="fragment">
                    <bean class="com.fansz.orm.template.FragmentDirective">
                        <property name="queryBuilder" ref="queryBuilder"/>
                    </bean>
                </entry>
                <entry key="str2number">
                    <bean class="com.fansz.orm.template.String2Number"/>
                </entry>
                <entry key="get_text">
                    <bean class="com.fansz.orm.template.CodeTextByTypeValue"/>
                </entry>
            </map>
        </property>
        <!-- <property name="templateLoaderPath" value="classpath:/template/ftl/"
            /> -->
        <property name="preferFileSystemAccess" value="false"/>
        <property name="freemarkerSettings">
            <props>
                <prop key="template_exception_handler">rethrow</prop><!-- ignore,debug,html_debug,rethrow -->
                <prop key="default_encoding">UTF-8</prop>
                <prop key="output_encoding">UTF-8</prop>
                <prop key="locale">zh_CN</prop>
                <prop key="date_format">yyyy-MM-dd</prop>
                <prop key="time_format">HH:mm:ss</prop>
                <prop key="datetime_format">yyyy-MM-dd HH:mm:ss</prop>
                <!-- 可以满足一般需要。默认情况变量为null则替换为空字符串，如果需要自定义，写上${empty!"EmptyValue of fbysss"}的形式即可 -->
                <prop key="classic_compatible">true</prop>
            </props>
        </property>
    </bean>

    <bean id="queryBuilder" class="com.fansz.orm.dao.support.QueryBuilderImpl"
          init-method="initialize" destroy-method="destory">
        <property name="freemarkerConfiguration" ref="freemarkerConfiguration"/>
        <property name="configLocations">
            <list>
                <value>classpath:/sql/user.xml</value>
            </list>
        </property>
        <property name="nativeSqlReturnMap" value="true"/>
    </bean>
    <bean id="daoMethodInterceptor" class="com.fansz.orm.dao.impl.DaoMethodInterceptor"/>
    <!-- 配置C3P0连接池: -->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="driverClass" value="${jdbc.driver}"/>
        <property name="jdbcUrl" value="${jdbc.url}"/>
        <property name="user" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
        <property name="maxIdleTime" value="3600"/>
        <property name="preferredTestQuery" value="SELECT 1"/>
        <property name="idleConnectionTestPeriod" value="18000"/>
        <property name="testConnectionOnCheckout" value="true"/>
    </bean>
    <bean id="lobHandler" class="org.springframework.jdbc.support.lob.DefaultLobHandler"/>
    <!-- Hibernate的相关信息 -->
    <bean id="sessionFactory"
          class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
        <!-- 注入连接池 -->
        <property name="dataSource" ref="dataSource"/>
        <!-- 配置Hibernate的其他的属性 -->
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">com.fansz.orm.dao.dialect.BlobMySQLDialect</prop>
                <prop key="hibernate.show_sql">true</prop>
                <prop key="hibernate.format_sql">false</prop>
                <prop key="hibernate.connection.autocommit">false</prop>
                <prop key="hibernate.bytecode.use_reflection_optimizer">true</prop>
            </props>
        </property>
        <property name="packagesToScan" value="com.fansz.auth.entity"/>
    </bean>
    <bean id="hibernateTemplate" class="org.springframework.orm.hibernate3.HibernateTemplate">
        <property name="sessionFactory" ref="sessionFactory"></property>
    </bean>

    <!-- 定义事务管理器 -->
    <bean id="transactionManager"
          class="org.springframework.orm.hibernate3.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory"></property>
    </bean>


    <!--关联事务增强 -->
    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <!-- 配置拦截 -->
        <tx:attributes>
            <tx:method name="get*" propagation="SUPPORTS"/>
            <tx:method name="find*" propagation="SUPPORTS"/>
            <tx:method name="save*" propagation="REQUIRED"/>
            <tx:method name="update*" propagation="REQUIRED"/>
            <tx:method name="delete*" propagation="REQUIRED"/>
            <tx:method name="*" propagation="REQUIRED" read-only="false"/>
        </tx:attributes>
    </tx:advice>

    <!-- 配置拦截规则 -->
    <aop:config>
        <!-- 拦截规则 -->
        <aop:pointcut id="servicePointcut"
                      expression="execution(* com.fansz.auth.service.*.*(..)) and !execution(* com.fansz.auth.service.VerifyCodeService.*(..))"/>
        <aop:advisor advice-ref="txAdvice" pointcut-ref="servicePointcut"/>
    </aop:config>

    <bean id="daoScanner" class="com.fansz.orm.dao.impl.DaoScannerImpl">
        <property name="basePackage" value="com.fansz.auth.repository"/>
    </bean>
    <bean id="daoBeanRegisterer" class="com.fansz.orm.dao.impl.DaoBeanRegisterer">
        <property name="daoScanner" ref="daoScanner"/>
    </bean>
</beans>
